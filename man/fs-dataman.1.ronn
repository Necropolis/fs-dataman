fs-dataman(1) -- Utility to manage data in the FamilySearch Partner Reference cluster.
======================================================================================
## SYNOPSIS

`fs-dataman` [-c --server-config <config-file>] &lt;command&gt;<br>

## DESCRIPTION

`fs-dataman` is a tool used to control the information visible in the FamilySearch partner reference cluster. It is broken out into sub-commands that perform specific tasks.

## COMMANDS

**New FamilySearch Commands**:

* [nfs-deploy55][fs-dataman-nfs-deploy55(1)] - Deploy the contents of a GEDCOM 5.5.1 file to the cluster.
* [nfs-inspect][fs-dataman-nfs-inspect(1)] - Inspect currently visible records in the tree.
* [nfs-link][fs-dataman-nfs-link(1)] - Link any two records to your current user's record as parents.
* [nfs-unlink][fs-dataman-nfs-unlink(1)] - Unlink any two records from your current user's record as parents.
* [nfs-deploy][fs-dataman-nfs-deploy(1)] - Deploy a GEDCOM to the cluster.
* [nfs-show-person][fs-dataman-nfs-show-person(1)] - Show the data associated with a specific record. Useful when debugging.
* [nfs-show-relationships][fs-dataman-nfs-show-relationships(1)] - Show the relationships of any type associated with a specific record. Useful when debugging.

** GEDCOM 5.5.1 Commands**:

* [ged55-list-individuals][fs-dataman-ged55-list-individuals(1)] - List all the blokes in a GEDCOM file.

## INSTALL

Prerequisites:

* Mac OS X 10.7 "Lion"
* Apple Xcode 4.3 (for compilers and git; ensure that you install the command line tools, as well!)
* Ruby (MRI 1.9.3 or Rubinius); (I *highly* recommend [RVM](http://beginrescueend.com/) if you aren't using it already!)
* The `bundler` gem (comes standard with Rubinius - hint hint!)

I've done a bit of legwork to make this utility pretty easy to install by writing a Rakefile.

To start, clone the project:

    git clone --recursive git@github.com:NSError/fs-dataman.git
    cd fs-dataman

Instruct bundler to get the dependencies:

    bundle install
    
You should see the gems `ronn` and `rake` being installed. You should have everything you need right there. Build the project, then install it:

    rake build
    rake install
    
Make a configuration file at `~/.fs-dataman.plist` using the [instructions and handy template][CONFIG-FILE]. You're now ready to start tearing it up with `fs-dataman`.

If you're done with the utility and want to make it go away, please don't. Just kidding, a message about why it wasn't what you were looking for would be cool, but I'm not going to get on your case. Uninstall all the files it installed by using the rake command:

    rake uninstall
    
And then you can blow away everything in the source tree you downloaded, and you're good to get gone. Some build intermediates will be hiding in `/tmp`, but that's wiped on every boot, so it might not even apply.

## GLOBAL OPTIONS

  * `-c` `--server-config`:
  Specify a custom server configuration file. Normally `fs-dataman` looks in `~/.fs-dataman.plist` for its configuration, but if you need to change that up or use a recurring set of scripts to manipulate different users, then you can use this flag to force a different set of credentials. Every command supports this option.

## CONFIG-FILE

The config file is an Apple Property List which needs four bits of information:

  * `server`:
  The URL of the server. `fs-dataman` is hard-coded to fail and die if this is api.familysearch.org - no messing with production data please!

  * `apikey`:
  This is your developer key that you use for partner reference.

  * `username`:
  The username you use when logging into www.dev.usys.org; this is generally something like `api-user-####`.

  * `password`:
  Store your password in plaintext.

The config file will end up looking like this:

    <?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
      "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
    <plist version="1.0">
    <dict>
      <key>server</key>
      <string>http://www.dev.usys.org</string>
      <key>apikey</key>
      <string>FAIL-FAIL-FAIL-FAIL-FAIL-FAIL-FAIL-FAIL</string>
      <key>username</key>
      <string>api-user-####</string>
      <key>password</key>
      <string>sekrit</string>
    </dict>
    </plist>

## FILES

`/usr/local/bin/fs-dataman`<br>
`/usr/local/share/man/man1/fs-dataman.1`<br>
`/usr/local/share/man/man1/fs-dataman-nfs-deploy55.1`<br>
`/usr/local/share/man/man1/fs-dataman-nfs-inspect.1`<br>
`/usr/local/share/man/man1/fs-dataman-nfs-link.1`<br>
`/usr/local/share/man/man1/fs-dataman-nfs-unlink.1`<br>
`/usr/local/share/man/man1/fs-dataman-nfs-show-person.1`<br>
`/usr/local/share/man/man1/fs-dataman-nfs-show-relationships.1`<br>
`/usr/local/share/man/man1/fs-dataman-ged55-list-individuals.1`<br>
`~/.fs-dataman.plist`

## BUGS

Please use [Github](https://github.com/NSError/fs-dataman) to report bugs and to see a list of current bugs.

## HISTORY

  * 0.2 RELEASE PENDING:
    Cleaned up the manpage documentation quite a lot. Instituted name prefixing because in "the future" there will be fancy new functionality related to GEDCOM X and Conclusion Tree. So the following commands: `inspect`, `link`, `unlink`, `show-person`, and `show-relationships`; were renamed to: `nfs-inspect`, `nfs-link`, `nfs-unlink`, `nfs-show-person`, and `nfs-show-relationships`, respectively. Added the `ged55-list-individuals` and `nfs-deploy55` commands, which are backed by a new (and not thoroughly tested) GEDCOM 5.5.1 parser.
  * 0.1 25 January 2012:
    First release. Has the `inspect`, `link`, `unlink`, `show-person`, and `show-relationships` commands. No known bugs.