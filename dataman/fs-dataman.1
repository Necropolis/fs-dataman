.Dd 1/13/12               \" DATE 
.Dt fs-dataman 1             \" Program name and manual section number 
.Os Darwin
.Sh NAME                  \" Section Header - required - don't modify 
.Nm fs-dataman
.Nd Utility to manage the data stored in the FamilySearch Reference Cluster
.Sh SYNOPSIS             \" Section Header - required - don't modify
.Nm
.Op Fl c -server-config Ar config-file
.Nm
deploy
.Op Fl s -soft
.Ar gedcom-file
.Ar object-id-file
.Nm
nuke
.Op Fl s -soft
.Op Fl f -force
.Ar object-id-input-file
.Ar object-id-output-file 
.Nm
inspect
.Ar object-id-output-file
.Op Ar gedcom-file
.Sh DESCRIPTION          \" Section Header - required - don't modify
A tool to control the data in the reference cluster. Because the GEDCOM file importer is such a piece of poo, the API is the only reliable way to access the cluster.
.Nm
allows you to upload a GEDCOM to the cluster and record the object IDs of the resulting data. Using these object IDs, you can then use the tool to go out and destroy all of those objects, the purpose of which is to allow you to re-populate the cluster with different data.
.Pp
.Nm
is broken out into several different commands to help with this general process:
.Pp
.Bl -tag -compact -indent
.It Ar deploy
Deploys data to the cluster from the supplied GEDCOM file. The object IDs are deposited into a file. Keep this file! Using it you can easily wipe only the data that came from this GEDCOM file!
.It Ar nuke
Nuke all the data from the cluster that corresponds to the supplied objed ID file. Another object ID file is generated - this is all the object IDs which
.Nm
failed to destroy! You will need these if you want to complete the destroy, perhaps by running again with the -f flag.
.It Ar inspect
Traverse the tree connected to the current user's record and generate an object ID file for all the connected objects. If you start with data not managed by
.Nm
, this is a great way to grab everything so you can start managing it with
.Nm
.
.El
.Pp
Additionally, if the love is strong enough from the community,
.Nm
may gain the ability to slurp all the data and store it locally so you could "stash" working states.
.Ss OPTIONS
.Bl -tag -compact -ohang
.It Fl c Ar config-file , Fl -server-config Ar config-file
A default location for the configuation file is
.Ar ~/.dataman.plist .
Yeah man, you heard me right, it's in Apple
.Ar plist
format. There's plenty of documentation about this on the web, and it's actually a pretty slick XML format. What you need to know is that inside the default dict there are going to be a few keys that need to be present, but more on that in the
.Ar config-file
section. What you need to know is that you can use the above switches to specify a custom configuration file whenever you feel the need.
.It Fl s -soft
Perform a soft-operation, which is where
.Nm
will not write any data to the server. This is mighty useful when hacking on
.Nm
or when you're not ready to write stuff, but just want to see what it'd do.
.It Fl f -force
When nuking data from the server,
.Fl f
will case
.Nm
to be very proactive about what it does, and in the event that an object association tries to abort a delete, it will go out and try to delete as many objects as it can in order to resolve the problem, only giving up when it finds a record it doesn't have permission to delete. These records will go into
.Ar object-id-output-file
for your later perusal.
.El
.Ss config-file
You've been waiting for it, and now it's here: the configuration file section.
.Bl -tag -compact -indent
.It Ar server
The URL of the server.
.Nm
is hard-coded to fail if this is
.Ar api.familysearch.org .
.It Ar apikey
This is your developer key that you use for the reference cluster. You could try your production key in here, but I doubt that it'd work.
.It Ar username
The username you use when logging into the web client at
.Ar www.dev.usys.org .
.It Ar password
Store your password in plaintext. Come on man, everybody is doing it!
.El
.Sh FILES                \" File used or created by the topic of the man page
.Bl -tag -width "/Users/joeuser/Library/really_long_file_name" -compact
.It Pa /usr/local/bin/dataman
.It Pa /usr/local/share/man/man1/dataman.1
.El                      \" Ends the list
.Sh BUGS              \" Document known, unremedied bugs 
Please see Github for a list of bugs.
.Sh HISTORY           \" Document history if command behaves in a unique manner
.Bl -tag -compact -ohang
.It 13 January 2012
This is when the utility was first started. This entry should be replaced with some more meaningful text after the first release.
.El